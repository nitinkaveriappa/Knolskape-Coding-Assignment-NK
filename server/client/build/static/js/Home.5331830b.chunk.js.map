{"version":3,"sources":["Home/Components/MenuBar.js","Home/Components/ContactsTable.js","Services/index.js","Home/Components/Home.js","Home/index.js"],"names":["useStyles","makeStyles","theme","details","fontSize","toolbar","justifyContent","left","flex","right","display","MenuBar","contacts","handleLogout","classes","AppBar","position","Toolbar","className","Typography","variant","name","email","IconButton","color","onClick","root","width","container","maxHeight","footer","columns","id","label","minWidth","ContactsTable","handleFetchRows","useState","rows","setRows","useEffect","connections","map","item","names","displayName","phone","phoneNumbers","canonicalForm","emailAddresses","value","createData","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","key","align","style","TableBody","row","hover","role","tabIndex","code","TableFooter","event","nextPageToken","disabled","KeyboardArrowRight","URL","process","getContacts","pageToken","cancelToken","a","URI","concat","axios","get","withCredentials","data","hitLogout","Home","history","useHistory","signal","CancelToken","source","setContacts","fetchContacts","token","response","console","log","Logout","cancel","push"],"mappings":"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","file":"static/js/Home.5331830b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Icon,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  details: {\r\n    fontSize: 15,\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  left: {\r\n    flex: 1,\r\n  },\r\n  right: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nconst MenuBar = ({ contacts, handleLogout }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar>\r\n        <div className={classes.left}>\r\n          <Typography variant=\"h6\" className={classes.details}>\r\n            {contacts.name} <br />\r\n            {contacts.email}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.right}>\r\n          <IconButton color=\"inherit\" onClick={handleLogout}>\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport map from 'lodash/map';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  IconButton,\r\n  TableFooter,\r\n  TableContainer,\r\n} from '@material-ui/core';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n  footer: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n});\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  {\r\n    id: 'phone',\r\n    label: 'Phone Number',\r\n    minWidth: 170,\r\n  },\r\n  {\r\n    id: 'email',\r\n    label: 'Email',\r\n    minWidth: 170,\r\n  },\r\n];\r\n\r\nconst ContactsTable = ({ contacts, handleFetchRows }) => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (contacts.connections) {\r\n      setRows([\r\n        ...map(contacts.connections, (item) => {\r\n          const name =\r\n            item.names && item.names[0].displayName\r\n              ? item.names[0].displayName\r\n              : '-';\r\n          const phone =\r\n            item.phoneNumbers && item.phoneNumbers[0].canonicalForm\r\n              ? item.phoneNumbers[0].canonicalForm\r\n              : '-';\r\n          const email =\r\n            item.emailAddresses && item.emailAddresses[0].value\r\n              ? item.emailAddresses[0].value\r\n              : '-';\r\n          return createData(name, phone, email);\r\n        }),\r\n      ]);\r\n    }\r\n  }, [contacts]);\r\n\r\n  // const handlePrevPageButtonClick = (event) => {\r\n  //   handleFetchRows(contacts.prevPageToken);\r\n  // };\r\n\r\n  const handleNextPageButtonClick = (event) => {\r\n    handleFetchRows(contacts.nextPageToken);\r\n  };\r\n\r\n  const createData = (name, phone, email) => {\r\n    return { name, phone, email };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n            <TableFooter></TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className={classes.footer}>\r\n          {/* <IconButton\r\n            onClick={handlePrevPageButtonClick}\r\n            disabled={!contacts.prevPageToken}\r\n            aria-label=\"previous page\"\r\n          >\r\n            <KeyboardArrowLeft />\r\n          </IconButton> */}\r\n          <IconButton\r\n            onClick={handleNextPageButtonClick}\r\n            disabled={!contacts.nextPageToken}\r\n            aria-label=\"next page\"\r\n          >\r\n            <KeyboardArrowRight />\r\n          </IconButton>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsTable;\r\n","import axios from 'axios';\r\n\r\nconst URL = process.env.REACT_APP_API;\r\n\r\nconst getContacts = async (pageToken, cancelToken) => {\r\n  let URI = URL.concat(`/users/list`);\r\n  if (pageToken) {\r\n    URI = URI.concat(`?pageToken=${pageToken}`);\r\n  }\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      withCredentials: true,\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst hitLogout = async (cancelToken) => {\r\n  let URI = URL.concat(`/auth/logout`);\r\n  try {\r\n    const { data } = await axios.get(URI, {\r\n      withCredentials: true,\r\n      cancelToken,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport { getContacts, hitLogout };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport MenuBar from './MenuBar';\r\nimport ContactsTable from './ContactsTable';\r\nimport { getContacts, hitLogout } from '../../Services';\r\n\r\nconst Home = () => {\r\n  let history = useHistory();\r\n  const signal = axios.CancelToken.source();\r\n  const [contacts, setContacts] = useState('');\r\n\r\n  const fetchContacts = async (pageToken = null) => {\r\n    try {\r\n      const response = await getContacts(pageToken, signal.token);\r\n      setContacts(response);\r\n      console.log({ response });\r\n      if (!response.email) {\r\n        Logout();\r\n      }\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n    return () => {\r\n      signal.cancel('Request Cancelled');\r\n    };\r\n  }, []);\r\n\r\n  const Logout = async () => {\r\n    try {\r\n      await hitLogout(signal.token);\r\n      setContacts('');\r\n      history.push('/login');\r\n    } catch (error) {\r\n      console.log('API Error', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuBar contacts={contacts} handleLogout={Logout} />\r\n      <ContactsTable contacts={contacts} handleFetchRows={fetchContacts} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import Home from './Components/Home';\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}